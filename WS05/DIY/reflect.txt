First of all, what I liked about this workshop was that the workshop output was so cute. And I learned and applied a new concept, which is operator overloading. At first, when the operator was overloaded, the function name was "operator+", so I couldn't adapt and it seemed too difficult, but it was so comfortable and nice to use in the workshop. Operator overloading refers to the use of an existing operation as a user-defined class. The overloaded operator is implemented as a function. Therefore, in this workshop, half of the functions are overloaded operator functions. One of the things I was a little confused about was the unary operator overload. Depending on whether the unary operators "++" and "--" are attached to the front or back of a variable or object, it is divided whether postfix and prefix. Therefore, we have to give a distinction for this even when overloading. Therefore, we divide "++a" into "a.operator++()" and "a++" into "a.operator++(int)" to distinguish the called function. Other than this, everything was well understood. And I tried to use the code (condition?true:false).